#!/bin/bash

# usage: ./pcap.sh [optional output pcap filename]
# required env vars
#  - PCAP_IFACE: which network interface should be captured (e.g., "eno1")
#  - PCAP_HOST: what host should be captured (e.g., "1.2.3.4")
# dependencies
#  - tcpdump
# if you get permission denied, run with sudo -E (to pass the env vars)

# log(msg)
function log() {
	echo "[+] $1"
}

# error(msg)
function error() {
	echo "[!] $1" 1>&2
}

# get_env_var(name)
function get_env_var() {
	# https://stackoverflow.com/a/13864829
	if [ -z "${!1}" ]; then
		error "$1 not set"
		return 1
	fi

	echo "${!1}"
}

# get_output_filename()
function get_output_filename() {
	local ts=$(date +%Y%m%d_%H%m%S)
	echo "proxy_$ts.pcap"
}

# make sure tcpdump is available
# https://stackoverflow.com/a/677212
if ! command -v tcpdump &>/dev/null; then
	error "tcpdump not available, please install it"
	return 1
fi

# get env vars
iface=$(get_env_var PCAP_IFACE) || return 1
host=$(get_env_var PCAP_HOST) || return 1

# get output filename
if (( $# == 1 )); then
	output_filename=$1
else
	output_filename=$(get_output_filename)
fi

log "pcap will be saved to $output_filename"

tcpdump -w $output_filename -i $PCAP_IFACE host $PCAP_HOST